// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

package system.drawing;

@net.sf.jni4net.attributes.ClrType
public class SizeF extends system.ValueType {
    
    //<generated-proxy>
    private static system.Type staticType;
    
    protected SizeF(net.sf.jni4net.inj.INJEnv __env, long __handle) {
            super(__env, __handle);
    }
    
    @net.sf.jni4net.attributes.ClrConstructor("(LSystem/Drawing/SizeF;)V")
    public SizeF(system.drawing.SizeF size) {
            super(((net.sf.jni4net.inj.INJEnv)(null)), 0);
        system.drawing.SizeF.__ctorSizeF0(this, size);
    }
    
    @net.sf.jni4net.attributes.ClrConstructor("(LSystem/Drawing/PointF;)V")
    public SizeF(system.ValueType pt) {
            super(((net.sf.jni4net.inj.INJEnv)(null)), 0);
        system.drawing.SizeF.__ctorSizeF1(this, pt);
    }
    
    @net.sf.jni4net.attributes.ClrConstructor("(FF)V")
    public SizeF(float width, float height) {
            super(((net.sf.jni4net.inj.INJEnv)(null)), 0);
        system.drawing.SizeF.__ctorSizeF2(this, width, height);
    }
    
    @net.sf.jni4net.attributes.ClrMethod("(Lsystem/drawing/SizeF;)V")
    private native static void __ctorSizeF0(net.sf.jni4net.inj.IClrProxy thiz, system.drawing.SizeF size);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lsystem/ValueType;)V")
    private native static void __ctorSizeF1(net.sf.jni4net.inj.IClrProxy thiz, system.ValueType pt);
    
    @net.sf.jni4net.attributes.ClrMethod("(FF)V")
    private native static void __ctorSizeF2(net.sf.jni4net.inj.IClrProxy thiz, float width, float height);
    
    @net.sf.jni4net.attributes.ClrMethod("()Z")
    public native boolean isEmpty();
    
    @net.sf.jni4net.attributes.ClrMethod("()F")
    public native float getWidth();
    
    @net.sf.jni4net.attributes.ClrMethod("(F)V")
    public native void setWidth(float value);
    
    @net.sf.jni4net.attributes.ClrMethod("()F")
    public native float getHeight();
    
    @net.sf.jni4net.attributes.ClrMethod("(F)V")
    public native void setHeight(float value);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Drawing/SizeF;LSystem/Drawing/SizeF;)LSystem/Drawing/SizeF;")
    public native static system.drawing.SizeF Add(system.drawing.SizeF sz1, system.drawing.SizeF sz2);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Drawing/SizeF;LSystem/Drawing/SizeF;)LSystem/Drawing/SizeF;")
    public native static system.drawing.SizeF Subtract(system.drawing.SizeF sz1, system.drawing.SizeF sz2);
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/Drawing/PointF;")
    public native system.ValueType ToPointF();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/Drawing/Size;")
    public native system.drawing.Size ToSize();
    
    public static system.Type typeof() {
        return system.drawing.SizeF.staticType;
    }
    
    private static void InitJNI(net.sf.jni4net.inj.INJEnv env, system.Type staticType) {
        system.drawing.SizeF.staticType = staticType;
    }
    //</generated-proxy>
}
