//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Drawing {
    
    
    #region Component Designer generated code 
    public partial class Point_ {
        
        public static global::java.lang.Class _class {
            get {
                return global::System.Drawing.@__Point.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::System.Drawing.Point), typeof(global::System.Drawing.Point_))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::System.Drawing.Point), typeof(global::System.Drawing.Point_))]
    internal sealed partial class @__Point : global::java.lang.Object {
        
        internal new static global::java.lang.Class staticClass;
        
        private @__Point(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::System.Drawing.@__Point.staticClass = @__class;
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__Point);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "isEmpty", "IsEmpty0", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getX", "X1", "()I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setX", "X2", "(I)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getY", "Y3", "()I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setY", "Y4", "(I)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Add", "Add5", "(Lsystem/drawing/Point;Lsystem/drawing/Size;)Lsystem/drawing/Point;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Subtract", "Subtract6", "(Lsystem/drawing/Point;Lsystem/drawing/Size;)Lsystem/drawing/Point;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Ceiling", "Ceiling7", "(Lsystem/ValueType;)Lsystem/drawing/Point;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Truncate", "Truncate8", "(Lsystem/ValueType;)Lsystem/drawing/Point;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Round", "Round9", "(Lsystem/ValueType;)Lsystem/drawing/Point;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Offset", "Offset10", "(II)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Offset", "Offset11", "(Lsystem/drawing/Point;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorPoint0", "__ctorPoint0", "(Lnet/sf/jni4net/inj/IClrProxy;II)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorPoint1", "__ctorPoint1", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/drawing/Size;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorPoint2", "__ctorPoint2", "(Lnet/sf/jni4net/inj/IClrProxy;I)V"));
            return methods;
        }
        
        private static bool IsEmpty0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::System.Drawing.Point @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.Point>(@__env, @__obj);
            @__return = ((bool)(@__real.IsEmpty));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static int X1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()I
            // ()I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            int @__return = default(int);
            try {
            global::System.Drawing.Point @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.Point>(@__env, @__obj);
            @__return = ((int)(@__real.X));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void X2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int value) {
            // (I)V
            // (I)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Drawing.Point @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.Point>(@__env, @__obj);
            @__real.X = value;
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static int Y3(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()I
            // ()I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            int @__return = default(int);
            try {
            global::System.Drawing.Point @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.Point>(@__env, @__obj);
            @__return = ((int)(@__real.Y));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void Y4(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int value) {
            // (I)V
            // (I)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Drawing.Point @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.Point>(@__env, @__obj);
            @__real.Y = value;
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Add5(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle pt, global::net.sf.jni4net.utils.JniLocalHandle sz) {
            // (Lsystem/drawing/Point;Lsystem/drawing/Size;)Lsystem/drawing/Point;
            // (LSystem/Drawing/Point;LSystem/Drawing/Size;)LSystem/Drawing/Point;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Drawing.Point>(@__env, global::System.Drawing.Point.Add(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.Point>(@__env, pt), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.Size>(@__env, sz)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Subtract6(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle pt, global::net.sf.jni4net.utils.JniLocalHandle sz) {
            // (Lsystem/drawing/Point;Lsystem/drawing/Size;)Lsystem/drawing/Point;
            // (LSystem/Drawing/Point;LSystem/Drawing/Size;)LSystem/Drawing/Point;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Drawing.Point>(@__env, global::System.Drawing.Point.Subtract(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.Point>(@__env, pt), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.Size>(@__env, sz)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Ceiling7(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle value) {
            // (Lsystem/ValueType;)Lsystem/drawing/Point;
            // (LSystem/Drawing/PointF;)LSystem/Drawing/Point;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Drawing.Point>(@__env, global::System.Drawing.Point.Ceiling(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.PointF>(@__env, value)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Truncate8(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle value) {
            // (Lsystem/ValueType;)Lsystem/drawing/Point;
            // (LSystem/Drawing/PointF;)LSystem/Drawing/Point;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Drawing.Point>(@__env, global::System.Drawing.Point.Truncate(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.PointF>(@__env, value)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Round9(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle value) {
            // (Lsystem/ValueType;)Lsystem/drawing/Point;
            // (LSystem/Drawing/PointF;)LSystem/Drawing/Point;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Drawing.Point>(@__env, global::System.Drawing.Point.Round(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.PointF>(@__env, value)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void Offset10(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int dx, int dy) {
            // (II)V
            // (II)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Drawing.Point @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.Point>(@__env, @__obj);
            @__real.Offset(dx, dy);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void Offset11(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle p) {
            // (Lsystem/drawing/Point;)V
            // (LSystem/Drawing/Point;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Drawing.Point @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.Point>(@__env, @__obj);
            @__real.Offset(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.Point>(@__env, p));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorPoint0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int x, int y) {
            // (II)V
            // (II)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Drawing.Point @__real = new global::System.Drawing.Point(x, y);
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorPoint1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle sz) {
            // (Lsystem/drawing/Size;)V
            // (LSystem/Drawing/Size;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Drawing.Point @__real = new global::System.Drawing.Point(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Drawing.Size>(@__env, sz));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorPoint2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int dw) {
            // (I)V
            // (I)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Drawing.Point @__real = new global::System.Drawing.Point(dw);
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::System.Drawing.@__Point(@__env);
            }
        }
    }
    #endregion
}
